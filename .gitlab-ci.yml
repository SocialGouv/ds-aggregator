---
include:
  - project: SocialGouv/gitlab-ci-yml
    file: /base_yarn_stage.yml
    ref: v4.6.0
#  - "/k8s/api/.deploy-ds-aggregator-api.yml"
#  - "/k8s/postgres/.deploy-ds-aggregator-postgres.yml"
#  - "/k8s/memcached/.deploy-ds-aggregator-memcached.yml"
#  - "/k8s/kinto/.deploy-ds-aggregator-kinto.yml"

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_VERSION: "18.06"
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  DEV_ENVIRONMENT_NAME: "dev.factory"
  PROD_ENVIRONMENT_NAME: "incubateur"
  API_PORT: 4000
  KINTO_PORT: 8888
  POSTGRES_PORT: 5432
  MEMCACHED_PORT: 11212

stages:
  - "Code Quality"
  - "Registration"
  - "Deploy dev"
  - "Deploy beta"
  - "Deploy prod"
  - "Send Url to GitHub"
  - "Delete K8S objects"


.resolve_env: &resolve_env |-
  set -x

  export BRANCH_NAME=${BRANCH_NAME:=$CI_COMMIT_REF_SLUG}
  export HASH_SIZE=${HASH_SIZE:=7}
  export K8S_PROJECT=${K8S_PROJECT:=$PROJECT}
  BRANCH_NAME_HASHED=$( printf "${BRANCH_NAME}" | sha1sum | cut -c1-${HASH_SIZE} )
  export BRANCH_HASH=${BRANCH_HASH:="$BRANCH_NAME_HASHED"}
  export K8S_NAMESPACE="${PROJECT}-feature-${BRANCH_HASH}"


  if [[ -n $PRODUCTION ]]; then
    export BRANCH_HASH=prod
    export IMAGE_TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
    export K8S_NAMESPACE="${PROJECT}"
    export DOMAIN="prod.${PROJECT}.fabrique.social.gouv.fr"

  elif [[ "${BRANCH_NAME}" = "master" ]]; then
    export BRANCH_HASH=master
    export IMAGE_TAG=${CI_COMMIT_SHA}
    export K8S_NAMESPACE="${PROJECT}-${BRANCH_HASH}"
    export DOMAIN="${PROJECT}-master.dev.fabrique.social.gouv.fr"

  elif [[ -n "${CI_COMMIT_TAG}" ]]; then
    export BRANCH_HASH=preprod;
    export IMAGE_TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
    export K8S_NAMESPACE="${PROJECT}-${BRANCH_HASH}"
    export DOMAIN="${PROJECT}-preprod.dev.fabrique.social.gouv.fr"

  else
    export IMAGE_TAG=${CI_COMMIT_SHA}
    export DOMAIN="${BRANCH_HASH}-${PROJECT}.dev.fabrique.social.gouv.fr"
  fi

  export HOST="${DOMAIN}"

  set +x

before_script:
  - *resolve_env


################################ CODE QUALITY ###############################

Code quality:
  stage: Code Quality
  extends:
    - .base_yarn_quality
    - .base_yarn_build
  when: manual
  except:
    variables:
      - $PRODUCTION
  allow_failure: false


##
#.quality_stage: &quality_stage
#  stage: "Code Quality"
#  image: node:13-alpine
#  before_script:
#    - yarn --frozen-lockfile
##
#
#Quality tests:
#  <<: *quality_stage
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - node_modules/
#  script:
#    - yarn build
#    - yarn lint
#    - yarn test
#
############################################
####               PREPARE               ###
############################################
#
##
#.get_github_id_stage: &get_github_id_stage
#  image:
#    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
#    entrypoint: [""]
#  before_script:
#    - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
#  script:
#    - sh k8s/scripts/get-github-deploy-id.sh
#  artifacts:
#    paths:
#      - github_deploy_id
##
#
#Get Github Id (dev):
#  <<: *get_github_id_stage
#  stage: "Deploy dev"
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#Get Github Id (beta):
#  <<: *get_github_id_stage
#  stage: "Deploy beta"
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
#Get Github Id (prod):
#  <<: *get_github_id_stage
#  stage: "Deploy prod"
#  environment:
#    name: $PROD_ENVIRONMENT_NAME
#  only:
#    - tags
#
############################################
####       REGISTER DOCKER IMAGES        ###
############################################
#
##
#.register_stage: &register_stage
#  stage: "Registration"
#  image: docker:$DOCKER_VERSION
#  services:
#    - docker:$DOCKER_VERSION-dind
#  before_script:
#    - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin
#    - docker pull $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA || true
#  script:
#    - echo "Build $IMAGE_NAME:$CI_COMMIT_SHA from $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA"
#    - docker build --cache-from $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA -t $IMAGE_NAME:$CI_COMMIT_SHA -f $DOCKERFILE_PATH $CONTEXT
#    - docker push $IMAGE_NAME
##
#
#Register api image:
#  <<: *register_stage
#  variables:
#    CONTEXT: .
#    DOCKERFILE_PATH: packages/api/Dockerfile
#    IMAGE_NAME: $CI_REGISTRY_IMAGE/api
#
#Register init kinto image:
#  <<: *register_stage
#  variables:
#    CONTEXT: packages/kinto
#    DOCKERFILE_PATH: packages/kinto/Dockerfile
#    IMAGE_NAME: $CI_REGISTRY_IMAGE/kinto
#
############################################
####            DEPLOY TO K8S            ###
############################################
#
##
#.deploy_stage: &deploy_stage
#  dependencies: []
#  variables: &deploy_stage_variables
#    DS_AGGREGATOR_REGISTRY: $CI_REGISTRY_IMAGE
#    IMAGE_TAG: $CI_COMMIT_SHA
##
#
## Feature branch
#
#Deploy @ds-aggregator/api (dev):
#  <<: *deploy_stage
#  stage: "Deploy dev"
#  extends: .deploy-ds-aggregator-api-k8s-dev
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $API_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#
#Deploy @ds-aggregator/postgres (dev):
#  <<: *deploy_stage
#  stage: "Deploy dev"
#  extends: .deploy-ds-aggregator-postgres-k8s-dev
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $POSTGRES_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#
#Deploy @ds-aggregator/memcached (dev):
#  <<: *deploy_stage
#  stage: "Deploy dev"
#  extends: .deploy-ds-aggregator-memcached-k8s-dev
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $MEMCACHED_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#
#Deploy @ds-aggregator/kinto (dev):
#  <<: *deploy_stage
#  stage: "Deploy dev"
#  extends: .deploy-ds-aggregator-kinto-k8s-dev
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $KINTO_PORT
#    CACHE_PORT: $MEMCACHED_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#
## deploy beta
#
#Deploy @ds-aggregator/api (beta):
#  <<: *deploy_stage
#  stage: "Deploy beta"
#  extends: .deploy-ds-aggregator-api-k8s-beta
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $API_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
#Deploy @ds-aggregator/postgres (beta):
#  <<: *deploy_stage
#  stage: "Deploy beta"
#  extends: .deploy-ds-aggregator-postgres-k8s-beta
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $POSTGRES_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
#Deploy @ds-aggregator/memcached (beta):
#  <<: *deploy_stage
#  stage: "Deploy beta"
#  extends: .deploy-ds-aggregator-memcached-k8s-beta
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $MEMCACHED_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
#Deploy @ds-aggregator/kinto (beta):
#  <<: *deploy_stage
#  stage: "Deploy beta"
#  extends: .deploy-ds-aggregator-kinto-k8s-beta
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $KINTO_PORT
#    CACHE_PORT: $MEMCACHED_PORT
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
## Prod Environment
#
#Deploy @ds-aggregator/api (prod):
#  <<: *deploy_stage
#  stage: "Deploy prod"
#  extends: .deploy-ds-aggregator-api-k8s-prod
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $API_PORT
#  environment:
#    name: $PROD_ENVIRONMENT_NAME
#  only:
#    - tags
#
#Deploy @ds-aggregator/memcached (prod):
#  <<: *deploy_stage
#  stage: "Deploy prod"
#  extends: .deploy-ds-aggregator-memcached-k8s-prod
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $MEMCACHED_PORT
#  environment:
#    name: $PROD_ENVIRONMENT_NAME
#  only:
#    - tags
#
#Deploy @ds-aggregator/kinto (prod):
#  <<: *deploy_stage
#  stage: "Deploy prod"
#  extends: .deploy-ds-aggregator-kinto-k8s-prod
#  variables:
#    <<: *deploy_stage_variables
#    PORT: $KINTO_PORT
#    CACHE_PORT: $MEMCACHED_PORT
#  environment:
#    name: $PROD_ENVIRONMENT_NAME
#  only:
#    - tags
#
############################################
####         SEND URL TO GITHUB          ###
############################################
#
##
#.send_url_to_github_stage: &send_url_to_github_stage
#  stage: "Send Url to GitHub"
#  image:
#    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
#    entrypoint: [""]
#  script:
#    - export DEPLOY_ID=$(cat github_deploy_id)
#    - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
#    - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME
##
#
#Send deployment url to Github (dev):
#  <<: *send_url_to_github_stage
#  before_script:
#    - HASH_BRANCH_NAME=$(printf "$CI_COMMIT_REF_NAME" | sha1sum | cut -c1-5)
#    - export HASH_BRANCH_NAME=$HASH_BRANCH_NAME
#    - export URL=http://$HASH_BRANCH_NAME-ds-aggregator.${CI_ENVIRONMENT_NAME}.social.gouv.fr/
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - branches
#  except:
#    - master
#
#Send deployment url to Github (beta):
#  <<: *send_url_to_github_stage
#  before_script:
#    - export URL=http://beta-ds-aggregator.${CI_ENVIRONMENT_NAME}.social.gouv.fr/
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - master
#
#Send deployment url to Github (prod):
#  <<: *send_url_to_github_stage
#  before_script:
#    - export URL=http://ds-aggregator.${CI_ENVIRONMENT_NAME}.social.gouv.fr/
#  environment:
#    name: $PROD_ENVIRONMENT_NAME
#  only:
#    - tags
#
############################################
####     DELETE USELESS K8S OBJECTS      ###
############################################
#
#Delete useless k8s objects:
#  stage: "Delete K8S objects"
#  image:
#    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
#    entrypoint: [""]
#  before_script:
#    - /apps/create-kubeconfig.sh
#  script:
#    - python3 k8s/scripts/delete-k8s-objects.py
#  environment:
#    name: $DEV_ENVIRONMENT_NAME
#  only:
#    - tags
